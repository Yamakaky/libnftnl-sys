// automatically generated by rust-bindgen

#![allow(dead_code,
         non_camel_case_types,
         non_upper_case_globals,
         non_snake_case)]

use std::os::raw::*;

use libmnl_sys::nlmsghdr;

#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum Enum_Unnamed1 {
    NFTNL_PARSE_EBADINPUT = 0,
    NFTNL_PARSE_EMISSINGNODE = 1,
    NFTNL_PARSE_EBADTYPE = 2,
    NFTNL_PARSE_EOPNOTSUPP = 3,
}
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum output_type {
    NFTNL_OUTPUT_DEFAULT = 0,
    NFTNL_OUTPUT_XML = 1,
    NFTNL_OUTPUT_JSON = 2,
}
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum output_flags {
    NFTNL_OF_EVENT_NEW = 1,
    NFTNL_OF_EVENT_DEL = 2,
    NFTNL_OF_EVENT_ANY = 3,
}
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum cmd_type {
    NFTNL_CMD_UNSPEC = 0,
    NFTNL_CMD_ADD = 1,
    NFTNL_CMD_INSERT = 2,
    NFTNL_CMD_DELETE = 3,
    NFTNL_CMD_REPLACE = 4,
    NFTNL_CMD_FLUSH = 5,
    NFTNL_CMD_MAX = 6,
}
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum parse_type {
    NFTNL_PARSE_NONE = 0,
    NFTNL_PARSE_XML = 1,
    NFTNL_PARSE_JSON = 2,
    NFTNL_PARSE_MAX = 3,
}
pub enum parse_err { }

#[link(name = "nftnl")]
extern "C" {
    #[link_name = "nftnl_nlmsg_build_hdr"]
    pub fn nlmsg_build_hdr(buf: *mut c_char,
                           cmd: u16,
                           family: u16,
                           type_: u16,
                           seq: u32)
                           -> *mut nlmsghdr;
    #[link_name = "nftnl_parse_err_alloc"]
    pub fn parse_err_alloc() -> *mut parse_err;
    #[link_name = "nftnl_parse_err_free"]
    pub fn parse_err_free(arg1: *mut parse_err);
    #[link_name = "nftnl_parse_perror"]
    pub fn parse_perror(str: *const c_char, err: *mut parse_err) -> c_int;
    #[link_name = "nftnl_batch_is_supported"]
    pub fn batch_is_supported() -> c_int;
    #[link_name = "nftnl_batch_begin"]
    pub fn batch_begin(buf: *mut c_char, seq: u32);
    #[link_name = "nftnl_batch_end"]
    pub fn batch_end(buf: *mut c_char, seq: u32);
}
